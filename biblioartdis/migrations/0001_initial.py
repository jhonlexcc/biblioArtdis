# Generated by Django 5.1.3 on 2024-11-27 15:48

import biblioartdis.models
import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('id_autor', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id_categoria', models.AutoField(primary_key=True, serialize=False)),
                ('nom_cat', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Coleccion',
            fields=[
                ('id_coleccion', models.AutoField(primary_key=True, serialize=False)),
                ('nomb_colecc', models.CharField(max_length=100)),
                ('orden', models.PositiveIntegerField(default=0)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='HistorialBusqueda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('termino_busqueda', models.CharField(max_length=255)),
                ('fecha_busqueda', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha_busqueda'],
            },
        ),
        migrations.CreateModel(
            name='Imagen',
            fields=[
                ('id_Imagen', models.AutoField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=255)),
                ('autorImg', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('img_portada', models.ImageField(max_length=255, upload_to='imagenes/')),
                ('pdf', models.FileField(blank=True, max_length=255, null=True, upload_to='pdfs/')),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('marca_agua', models.ImageField(blank=True, max_length=255, null=True, upload_to='marcas_agua/')),
                ('categorias', models.ManyToManyField(blank=True, to='biblioartdis.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='Libro',
            fields=[
                ('id_libro', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('LIBRO', 'Libro'), ('ARTICULO', 'Artículo'), ('REVISTA', 'Revista'), ('TESIS', 'Tesis'), ('DICCIONARIO', 'Diccionario'), ('MONOGRAFIA', 'Monografía'), ('FOLLETO', 'Folleto'), ('INFORME', 'Informe'), ('OTRO', 'Otro')], max_length=15)),
                ('titulo', models.CharField(max_length=255)),
                ('edicion', models.CharField(blank=True, max_length=50, null=True)),
                ('categoria', models.CharField(choices=[('NIVEL 1', 'NIVEL 1'), ('NIVEL 2', 'NIVEL 2'), ('NIVEL 3', 'NIVEL 3'), ('NIVEL 4', 'NIVEL 4'), ('OTRO', 'OTRO')], max_length=15)),
                ('img_portada', models.ImageField(upload_to='portadas/')),
                ('pdf', models.FileField(upload_to='pdfs/')),
                ('archivo_autorizacion', models.FileField(blank=True, null=True, upload_to='autorizaciones/')),
                ('fecha_publicacion', models.DateField(default=datetime.date.today)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('palabra_clave', models.TextField(blank=True, null=True)),
                ('descarga_autorizada', models.BooleanField(default=True)),
                ('pdf_url', models.URLField(blank=True, max_length=500, null=True)),
                ('autores', models.ManyToManyField(to='biblioartdis.autor')),
                ('categorias', models.ManyToManyField(blank=True, to='biblioartdis.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='Revista',
            fields=[
                ('id_revista', models.AutoField(primary_key=True, serialize=False)),
                ('nro_revista', models.IntegerField(blank=True, null=True)),
                ('img_portada', models.ImageField(upload_to='portadasRev/')),
                ('pdf', models.FileField(blank=True, null=True, upload_to='pdfsRev/')),
                ('url', models.URLField(blank=True, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('coleccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblioartdis.coleccion')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('usuario_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombres', models.CharField(max_length=50)),
                ('apepat', models.CharField(max_length=30)),
                ('apemat', models.CharField(max_length=30)),
                ('ci', models.CharField(max_length=20)),
                ('correo', models.EmailField(max_length=254)),
                ('extension', models.CharField(choices=[('LP', 'LP'), ('CH', 'CH'), ('CB', 'CB'), ('OR', 'OR'), ('PT', 'PT'), ('TJ', 'TJ'), ('SC', 'SC'), ('BE', 'BE'), ('PD', 'PD')], max_length=5)),
                ('complemento', models.CharField(blank=True, max_length=100, null=True)),
                ('tipo_usuario', models.CharField(choices=[('Estudiante', 'Estudiante'), ('Administrador', 'Administrador'), ('Docente', 'Docente'), ('Externo', 'Externo')], max_length=50)),
                ('ru', models.CharField(blank=True, max_length=20, null=True)),
                ('nro_celular', models.CharField(max_length=20)),
                ('fecha_alta', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_baja', models.DateTimeField(blank=True, default=biblioartdis.models.get_fecha_baja_default, null=True)),
                ('esta_activo', models.BooleanField(default=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha_alta'],
            },
        ),
        migrations.CreateModel(
            name='Sugerencia',
            fields=[
                ('id_sugerencia', models.AutoField(primary_key=True, serialize=False)),
                ('autor_sugerencia', models.CharField(max_length=50)),
                ('titulo_sugerencia', models.CharField(max_length=80)),
                ('fecha_sugerencia', models.DateField(auto_now_add=True)),
                ('edicion', models.CharField(max_length=50)),
                ('estado_respuesta', models.CharField(default='Pendiente', max_length=20)),
                ('descripcion', models.TextField()),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblioartdis.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='VisitaLibro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_visualizacion', models.DateTimeField(auto_now=True)),
                ('fecha_consulta', models.DateField(default=datetime.date.today)),
                ('libro_visitado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblioartdis.libro')),
                ('visitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblioartdis.usuario')),
            ],
        ),
    ]
